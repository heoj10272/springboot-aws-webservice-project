plugins {
    id 'org.springframework.boot' version '2.4.1' // RELEASE 삭제
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group 'com.spring.aws.project'
version '1.0-SNAPSHOT'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

//for Junit 5
test {
    useJUnitPlatform()
}

dependencies {
    //(3)
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // lombok
    implementation('org.projectlombok:lombok:1.18.24')
    testImplementation 'junit:junit:4.13.2'
    annotationProcessor('org.projectlombok:lombok:1.18.24')
    compileOnly('org.projectlombok:lombok:1.18.24')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    // spring-boot-starter-data-jpa
        // 스프링 부트용 Spring Data JPA 추상화 라이브러리
        // 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리해 줌
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.mariadb.jdbc:mariadb-java-client")
    // h2
        // 인메모리 관계형 데이터베이스
        // 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있음
        // 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용
        // 이 책에서는 JPA의 테스트, 로컬 환경에서의 구동에 사용할 예정
    implementation('com.h2database:h2')

    // spring-boot-starter-oauth2-client
        // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성입니다.
        // spring-security-oauth2-client와 spring-security-oauth2-jose를 기본으로 관리해줍니다.
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') // 권한 관련
    implementation('org.springframework.session:spring-session-jdbc') // 권한 관련

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test") // 권한 관련
}